/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          twitter_url?: parameters["rowFilter.profiles.twitter_url"];
          instaegram_url?: parameters["rowFilter.profiles.instaegram_url"];
          sex?: parameters["rowFilter.profiles.sex"];
          age?: parameters["rowFilter.profiles.age"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          twitter_url?: parameters["rowFilter.profiles.twitter_url"];
          instaegram_url?: parameters["rowFilter.profiles.instaegram_url"];
          sex?: parameters["rowFilter.profiles.sex"];
          age?: parameters["rowFilter.profiles.age"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          twitter_url?: parameters["rowFilter.profiles.twitter_url"];
          instaegram_url?: parameters["rowFilter.profiles.instaegram_url"];
          sex?: parameters["rowFilter.profiles.sex"];
          age?: parameters["rowFilter.profiles.age"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/target_view": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.target_view.id"];
          name?: parameters["rowFilter.target_view.name"];
          description?: parameters["rowFilter.target_view.description"];
          value?: parameters["rowFilter.target_view.value"];
          is_complete?: parameters["rowFilter.target_view.is_complete"];
          created_at?: parameters["rowFilter.target_view.created_at"];
          favorite_count?: parameters["rowFilter.target_view.favorite_count"];
          ogp_url?: parameters["rowFilter.target_view.ogp_url"];
          username?: parameters["rowFilter.target_view.username"];
          avatar_url?: parameters["rowFilter.target_view.avatar_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["target_view"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/targets": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.targets.id"];
          user_id?: parameters["rowFilter.targets.user_id"];
          name?: parameters["rowFilter.targets.name"];
          description?: parameters["rowFilter.targets.description"];
          value?: parameters["rowFilter.targets.value"];
          is_complete?: parameters["rowFilter.targets.is_complete"];
          deadline?: parameters["rowFilter.targets.deadline"];
          created_at?: parameters["rowFilter.targets.created_at"];
          emoji?: parameters["rowFilter.targets.emoji"];
          favorite_count?: parameters["rowFilter.targets.favorite_count"];
          ogp_url?: parameters["rowFilter.targets.ogp_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["targets"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** targets */
          targets?: definitions["targets"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.targets.id"];
          user_id?: parameters["rowFilter.targets.user_id"];
          name?: parameters["rowFilter.targets.name"];
          description?: parameters["rowFilter.targets.description"];
          value?: parameters["rowFilter.targets.value"];
          is_complete?: parameters["rowFilter.targets.is_complete"];
          deadline?: parameters["rowFilter.targets.deadline"];
          created_at?: parameters["rowFilter.targets.created_at"];
          emoji?: parameters["rowFilter.targets.emoji"];
          favorite_count?: parameters["rowFilter.targets.favorite_count"];
          ogp_url?: parameters["rowFilter.targets.ogp_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.targets.id"];
          user_id?: parameters["rowFilter.targets.user_id"];
          name?: parameters["rowFilter.targets.name"];
          description?: parameters["rowFilter.targets.description"];
          value?: parameters["rowFilter.targets.value"];
          is_complete?: parameters["rowFilter.targets.is_complete"];
          deadline?: parameters["rowFilter.targets.deadline"];
          created_at?: parameters["rowFilter.targets.created_at"];
          emoji?: parameters["rowFilter.targets.emoji"];
          favorite_count?: parameters["rowFilter.targets.favorite_count"];
          ogp_url?: parameters["rowFilter.targets.ogp_url"];
        };
        body: {
          /** targets */
          targets?: definitions["targets"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/targets_info_view": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.targets_info_view.id"];
          name?: parameters["rowFilter.targets_info_view.name"];
          description?: parameters["rowFilter.targets_info_view.description"];
          value?: parameters["rowFilter.targets_info_view.value"];
          is_complete?: parameters["rowFilter.targets_info_view.is_complete"];
          deadline?: parameters["rowFilter.targets_info_view.deadline"];
          created_at?: parameters["rowFilter.targets_info_view.created_at"];
          favorite_count?: parameters["rowFilter.targets_info_view.favorite_count"];
          username?: parameters["rowFilter.targets_info_view.username"];
          avatar_url?: parameters["rowFilter.targets_info_view.avatar_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["targets_info_view"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
}

export interface definitions {
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    twitter_url?: string;
    /** Format: text */
    instaegram_url?: string;
    /** Format: smallint */
    sex: number;
    /** Format: integer */
    age: number;
  };
  target_view: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    name?: string;
    /** Format: text */
    description?: string;
    /** Format: integer */
    value?: number;
    /** Format: boolean */
    is_complete?: boolean;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: integer */
    favorite_count?: number;
    /** Format: text */
    ogp_url?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
  };
  targets: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: uuid */
    user_id: string;
    /** Format: text */
    name: string;
    /** Format: text */
    description?: string;
    /** Format: integer */
    value: number;
    /** Format: boolean */
    is_complete: boolean;
    /** Format: date */
    deadline?: string;
    /**
     * Format: timestamp with time zone
     * @default (now() AT TIME ZONE 'utc'::text)
     */
    created_at: string;
    /** Format: character varying */
    emoji?: string;
    /** Format: integer */
    favorite_count: number;
    /** Format: text */
    ogp_url?: string;
  };
  targets_info_view: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    name?: string;
    /** Format: text */
    description?: string;
    /** Format: integer */
    value?: number;
    /** Format: boolean */
    is_complete?: boolean;
    /** Format: date */
    deadline?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: integer */
    favorite_count?: number;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
  /** Format: text */
  "rowFilter.profiles.twitter_url": string;
  /** Format: text */
  "rowFilter.profiles.instaegram_url": string;
  /** Format: smallint */
  "rowFilter.profiles.sex": string;
  /** Format: integer */
  "rowFilter.profiles.age": string;
  /** @description target_view */
  "body.target_view": definitions["target_view"];
  /** Format: bigint */
  "rowFilter.target_view.id": string;
  /** Format: text */
  "rowFilter.target_view.name": string;
  /** Format: text */
  "rowFilter.target_view.description": string;
  /** Format: integer */
  "rowFilter.target_view.value": string;
  /** Format: boolean */
  "rowFilter.target_view.is_complete": string;
  /** Format: timestamp with time zone */
  "rowFilter.target_view.created_at": string;
  /** Format: integer */
  "rowFilter.target_view.favorite_count": string;
  /** Format: text */
  "rowFilter.target_view.ogp_url": string;
  /** Format: text */
  "rowFilter.target_view.username": string;
  /** Format: text */
  "rowFilter.target_view.avatar_url": string;
  /** @description targets */
  "body.targets": definitions["targets"];
  /** Format: bigint */
  "rowFilter.targets.id": string;
  /** Format: uuid */
  "rowFilter.targets.user_id": string;
  /** Format: text */
  "rowFilter.targets.name": string;
  /** Format: text */
  "rowFilter.targets.description": string;
  /** Format: integer */
  "rowFilter.targets.value": string;
  /** Format: boolean */
  "rowFilter.targets.is_complete": string;
  /** Format: date */
  "rowFilter.targets.deadline": string;
  /** Format: timestamp with time zone */
  "rowFilter.targets.created_at": string;
  /** Format: character varying */
  "rowFilter.targets.emoji": string;
  /** Format: integer */
  "rowFilter.targets.favorite_count": string;
  /** Format: text */
  "rowFilter.targets.ogp_url": string;
  /** @description targets_info_view */
  "body.targets_info_view": definitions["targets_info_view"];
  /** Format: bigint */
  "rowFilter.targets_info_view.id": string;
  /** Format: text */
  "rowFilter.targets_info_view.name": string;
  /** Format: text */
  "rowFilter.targets_info_view.description": string;
  /** Format: integer */
  "rowFilter.targets_info_view.value": string;
  /** Format: boolean */
  "rowFilter.targets_info_view.is_complete": string;
  /** Format: date */
  "rowFilter.targets_info_view.deadline": string;
  /** Format: timestamp with time zone */
  "rowFilter.targets_info_view.created_at": string;
  /** Format: integer */
  "rowFilter.targets_info_view.favorite_count": string;
  /** Format: text */
  "rowFilter.targets_info_view.username": string;
  /** Format: text */
  "rowFilter.targets_info_view.avatar_url": string;
}

export interface operations {}

export interface external {}
